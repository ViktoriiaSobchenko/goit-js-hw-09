{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAE3CF,EAAQM,iBAAiB,UAIzB,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIC,EAAQC,OAAOP,EAAWQ,OAC9B,MAAMC,EAAOF,OAAON,EAAUO,OACxBE,EAASH,OAAOL,EAAYM,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCC,EAAWD,EAQf,SAAuBE,EAAUP,GAC/B,OAAO,IAAIQ,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,CAAEM,SAAAR,E,MAAUP,IAEtBU,EAAO,CAAEK,SAAAR,E,MAAUP,GAAQ,GAC1BA,EAAM,G,CAKXgB,CApBgBV,EAAUN,GAqBvBiB,MAAK,EAAGF,SAAAG,EAAQlB,MAAEA,MACjBmB,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAqBH,QAAelB,MAAW,CACrEsB,QAAS,KACT,IAEHC,OAAM,EAAGR,SAAAS,EAAQxB,MAAEA,MAClBmB,EAAA9B,GAAS+B,OAAOK,QAAQ,oBAAoBD,QAAexB,MAAW,CACpEsB,QAAS,KACT,IA3BJtB,GAASG,C,IAbb,IAAIG,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nconst inputDelay = document.querySelector('[name=\"delay\"]');\nconst inputStep = document.querySelector('[name=\"step\"]');\nconst inputAmount = document.querySelector('[name=\"amount\"]');\n\nformRef.addEventListener('submit', onSubmit);\n\nlet position = 0;\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(inputDelay.value);\n  const step = Number(inputStep.value);\n  const amount = Number(inputAmount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    position = i;\n\n    createMessage(position, delay);\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction createMessage(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n        timeout: 5000,\n      });\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n        timeout: 5000,\n      });\n    });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","addEventListener","evt","preventDefault","delay","Number","value","step","amount","i","$47d4ff9957288465$var$position","position1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","$47d4ff9957288465$var$createPromise","then","position3","$parcel$interopDefault","Notify","success","timeout","catch","position4","failure"],"version":3,"file":"03-promises.304ab176.js.map"}