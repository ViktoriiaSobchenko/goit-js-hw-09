{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SACjCC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAE3CF,EAAQM,iBAAiB,UAIzB,SAAkBC,GAChBA,EAAIC,iBAKJ,IAJA,IAAIC,EAAQC,OAAOP,EAAWQ,OACxBC,EAAOF,OAAON,EAAUO,OACxBE,EAASH,OAAOL,EAAYM,OAEzBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAGhCC,EAFWD,EAEaL,GAExBA,GAASG,C,IAiBb,SAASG,EAAcC,EAAUP,IAbjC,SAAuBQ,EAAUR,GAC/B,OAAO,IAAIS,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEM,SAAAR,EAAUR,UAEtBW,EAAO,CAAEK,SAAAR,EAAUR,S,GAClBA,E,KAKLiB,CAAcV,EAAUP,GACrBkB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARH,SAAUK,EAAKF,EAALnB,MACjBsB,EAAAjC,GAASkC,OAAOC,QAAQ,qBAAoCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,MAAK,CACrEK,QAAS,K,IAGZC,OAAM,SAAAR,G,IAAGC,EAAQD,EAARH,SAAUK,EAAKF,EAALnB,MAClBsB,EAAAjC,GAASkC,OAAOK,QAAQ,oBAAmCH,OAAfL,EAAS,QAAYK,OAANJ,EAAM,MAAK,CACpEK,QAAS,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nconst inputDelay = document.querySelector('[name=\"delay\"]');\nconst inputStep = document.querySelector('[name=\"step\"]');\nconst inputAmount = document.querySelector('[name=\"amount\"]');\n\nformRef.addEventListener('submit', onSubmit);\n\nlet position = 0;\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(inputDelay.value);\n  const step = Number(inputStep.value);\n  const amount = Number(inputAmount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    position = i;\n\n    createMessage(position, delay);\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction createMessage(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n        timeout: 5000,\n      });\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n        timeout: 5000,\n      });\n    });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","addEventListener","evt","preventDefault","delay","Number","value","step","amount","i","$ce04d3a99e08e73b$var$createMessage","position2","position1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delay","$parcel$interopDefault","Notify","success","concat","timeout","catch","failure"],"version":3,"file":"03-promises.94cfd194.js.map"}